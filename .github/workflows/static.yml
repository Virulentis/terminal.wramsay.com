# Simple workflow for deploying Vite React app to GitHub Pages
name: Deploy React App to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Checkout private resume repo
        uses: actions/checkout@v4
        with:
          repository: virulentis/resume
          token: ${{ secrets.VITE_GITHUB_TOKEN }}
          path: resume-repo

      - name: Copy YAML from private repo
        run: |
          if [ -f resume-repo/William_Ramsay_CV.yaml ]; then
            cp resume-repo/William_Ramsay_CV.yaml ./
            echo "✅ Resume YAML copied from private repo"
          else
            echo "❌ Resume YAML not found in private repo - using local fallback"
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Install dependencies
        run: pnpm install
        
      # CRITICAL: Copy YAML file to public directory before build
      - name: Copy CV YAML to public directory
        run: |
          echo "Copying CV YAML to public directory..."
          cp William_Ramsay_CV.yaml public/William_Ramsay_CV.yaml
          echo "Verifying file was copied:"
          ls -la public/William_Ramsay_CV.yaml
        
      # Replace template placeholders in index.html before build
      - name: Replace template placeholders
        env:
          RESUME_FILE_PATH: 'William_Ramsay_CV.yaml'
        run: |
          # Read the CV YAML file and extract name and location
          if [ -f "$RESUME_FILE_PATH" ]; then
            echo "Using local CV file: $RESUME_FILE_PATH"
            NAME=$(grep -m 1 "name:" "$RESUME_FILE_PATH" | sed 's/.*name: //' | sed 's/["'\'']//')
            LOCATION=$(grep -m 1 "location:" "$RESUME_FILE_PATH" | sed 's/.*location: //' | sed 's/["'\'']//')
          else
            echo "CV file not found, using fallback values"
            NAME="William Ramsay"
            LOCATION="Vancouver, BC"
          fi
          
          echo "Name: $NAME"
          echo "Location: $LOCATION"
          
          # Replace placeholders in index.html
          sed -i "s/{{DEVELOPER_NAME}}/$NAME/g" index.html
          sed -i "s/{{DEVELOPER_LOCATION}}/$LOCATION/g" index.html
          
          echo "Template placeholders replaced successfully"
        
      - name: Build project
        env:
          VITE_GITHUB_TOKEN: ${{ secrets.RESUME_GITHUB_TOKEN }}
          VITE_RESUME_REPO: ${{ vars.RESUME_REPO }}
          VITE_RESUME_BRANCH: ${{ vars.RESUME_BRANCH || 'main' }}
          VITE_RESUME_FILE_PATH: ${{ vars.RESUME_FILE_PATH }}
          VITE_RESUME_PDF_PATH: ${{ vars.RESUME_PDF_PATH }}
          VITE_USE_LOCAL_FALLBACK: ${{ vars.USE_LOCAL_FALLBACK || 'true' }}
        run: pnpm build
        
      # Verify the YAML file made it to the build output
      - name: Verify YAML in build output
        run: |
          echo "Checking if YAML file exists in dist directory:"
          ls -la dist/William_Ramsay_CV.yaml || echo "YAML file not found in dist!"
        
      - name: Add CNAME file
        run: echo "terminal.wramsay.com" > ./dist/CNAME
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: './dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4